version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: projectmanager_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: projectmanager
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./packages/api
      dockerfile: Dockerfile
    image: projectmanager-api:latest
    container_name: projectmanager_api
    restart: unless-stopped
    volumes:
      - api_data:/app/data
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/projectmanager
      JWT_SECRET: your_jwt_secret_here
      PLANE_API_KEY: your_plane_api_key
      OUTLINE_API_KEY: your_outline_api_key
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "yarn db:migrate && yarn db:seed && yarn start"

  web:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    image: projectmanager-web:latest
    container_name: projectmanager_web
    restart: unless-stopped
    volumes:
      - web_data:/app/data
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - app-network

volumes:
  postgres_data:
  api_data:
  web_data:

networks:
  app-network:
    driver: bridge 