version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: projectmanager,outline
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e sessões
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da API integrada
  api:
    build:
      context: ../packages/api
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/projectmanager
      REDIS_URL: redis://redis:6379
      JWT_SECRET: devsecretchangethisinproduction
      PORT: 4000
      PLANE_URL: http://plane:3000
      OUTLINE_URL: http://outline:3001
    volumes:
      - ../packages/api:/app
      - /app/node_modules
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    command: yarn dev

  # Serviço Plane (praticamente sem modificações)
  plane:
    build:
      context: ../packages/plane
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/projectmanager
      REDIS_URL: redis://redis:6379
      JWT_SECRET: devsecretchangethisinproduction
      PORT: 3000
      API_URL: http://api:4000
    volumes:
      - ../packages/plane:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - api
    command: yarn dev

  # Serviço Outline modificado
  outline:
    build:
      context: ../packages/outline
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/outline
      REDIS_URL: redis://redis:6379
      JWT_SECRET: devsecretchangethisinproduction
      PORT: 3001
      API_URL: http://api:4000
      SECRET_KEY: devsecretkeychangethisinproduction
    volumes:
      - ../packages/outline:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - api
    command: yarn dev

  # Frontend (UI)
  web:
    build:
      context: ../packages/web
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_PLANE_URL: http://localhost:3000
      NEXT_PUBLIC_OUTLINE_URL: http://localhost:3001
    volumes:
      - ../packages/web:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - api
      - plane
      - outline
    command: yarn dev

volumes:
  postgres-data:
  redis-data: 